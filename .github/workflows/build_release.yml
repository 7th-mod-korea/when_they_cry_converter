# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    tags: 'release/*'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-2019]
    runs-on: ${{ matrix.os }}
    name: Build on ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    
    - name: Initialize environment
      shell: bash
      env:
        RUNNER_OS: ${{ runner.os }}
      run: |
        if [ $RUNNER_OS == 'Windows' ]; then
          artifact-name="converter.exe"
        else
          artifact-name="converter"
        fi
        echo ::set-env name=artifact-name::${artifact-name}
      
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create artifact
      run: pyinstaller --onefile converter.py
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
              
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./dist/${{ env.artifact-name }}
        asset_name: ${{ env.artifact-name }}
        asset_content_type: application/octet-stream
